import createError from"http-errors";import express from"express";import path from"path";import{fileURLToPath}from"url";import logger from"morgan";import dotenv from"dotenv";import session from"./app/config/sessionStore.js";import passport from"passport";import passportConfig from"./app/config/passport.js";import homeRouter from"./routes/home-route.js";import cvRouter from"./routes/cv-route.js";import projectsRouter from"./routes/projects-route.js";import articlesRouter from"./routes/articles-route.js";import examensRouter from"./routes/examens-route.js";import contactRouter from"./routes/contact-route.js";import veilleRouter from"./routes/veille-route.js";import registerRouter from"./routes/register-route.js";import loginRouter from"./routes/login-route.js";import logoutRouter from"./routes/logout-route.js";import adminRouter from"./routes/admin-route.js";const app=express();const listeningPort=80;const __filename=fileURLToPath(import.meta.url);const __dirname=path.dirname(__filename);dotenv.config();app.set("views",path.join(__dirname,"views"));app.set("view engine","ejs");app.use(logger("dev"));app.use(express.json());app.use(express.urlencoded({extended:false}));app.use(express.static(path.join(__dirname,"public")));app.use(session);app.use(passport.initialize());app.use(passport.session());passportConfig();app.use("/",homeRouter);app.use("/cv",cvRouter);app.use("/projects",projectsRouter);app.use("/articles",articlesRouter);app.use("/examens",examensRouter);app.use("/contact",contactRouter);app.use("/veille",veilleRouter);app.use("/admin",adminRouter);app.use("/account",loginRouter);app.use("/account",logoutRouter);app.use("/account",registerRouter);app.use("/libs/threebuild",express.static(path.join(__dirname,"node_modules/three/build")));app.use("/libs/threejsm",express.static(path.join(__dirname,"node_modules/three/examples/jsm")));app.use(function(req,res,next){next(createError(404))});app.use(function(err,req,res,next){res.locals.message=err.message;res.locals.error=req.app.get("env")==="development"?err:{};res.status(err.status||500);res.render("error")});app.listen(listeningPort,err=>{if(err){throw err}console.log(`App up and running on port ${listeningPort} !`)});